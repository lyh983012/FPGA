
#include <system.h>


unsigned char buf[]={
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0xF0,
    0xF0,0x78,0x38,0x38,0x38,0x78,0xF0,0xF0,0xE0,0x80,0x00,0x00,0xE0,0xF0,0xF8,0x38,
    0x38,0x38,0x38,0x78,0xF0,0xF0,0xC0,0x00,0x00,0xF8,0xF8,0xF8,0x00,0x00,0x00,0x00,
 0x00,0xF8,0xF8,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xF8,0xF8,0x38,
 0x38,0x38,0x38,0x38,0x38,0x38,0x00,0x00,0xF8,0xF8,0xF8,0x38,0x38,0x38,0x38,0x78,
 0xF8,0xF0,0xE0,0x00,0x00,0x80,0xE0,0xF0,0xF0,0x78,0x38,0x38,0x38,0x38,0x78,0xF0,
 0xF0,0x40,0x00,0x00,0x00,0x00,0xC0,0xF8,0xF8,0x38,0xF8,0xF8,0xC0,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x7F,0xFF,
 0xF0,0xE0,0xC0,0xC0,0xC0,0xE0,0xF0,0xFF,0x7F,0x1F,0x00,0x00,0x31,0xF3,0xF7,0xE7,
 0xC7,0xC6,0xCE,0xCE,0xFC,0xFC,0x78,0x00,0x00,0xFF,0xFF,0xFF,0x07,0x07,0x07,0x07,
 0x07,0xFF,0xFF,0xFF,0x00,0x00,0x1C,0x1C,0x1C,0x1C,0x1C,0x00,0xFF,0xFF,0xFF,0x07,
 0x07,0x07,0x07,0x07,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x0E,0x0E,0x0E,0x0E,0x0F,
 0x0F,0x07,0x03,0x00,0x00,0x1F,0x7F,0xFF,0xF0,0xE0,0xC0,0xC0,0xDC,0xDC,0xDC,0xFC,
 0xFC,0x7C,0x00,0x80,0xF0,0xFE,0x7F,0x3F,0x39,0x38,0x39,0x3F,0x7F,0xFE,0xF0,0x80,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
 0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x00,0x00,0x00,0x00,
 0x00,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x00,
 0x00,0x00,0x00,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0xF8,0xF8,0x28,0xE8,0xC8,0xF8,0xF8,0xC8,0x68,0x28,0xF8,
 0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x60,0x38,0x38,0x60,0xC0,0x80,
 0x80,0x00,0x00,0x00,0x00,0x00,0x10,0x10,0x10,0x10,0xF0,0xF0,0x10,0x10,0x10,0xF0,
 0xF0,0x10,0x10,0x10,0x10,0x00,0x00,0x80,0xF0,0xF0,0x80,0x80,0xF8,0xF8,0x80,0x90,
 0xB0,0xE0,0xE0,0x80,0x80,0x80,0x00,0x80,0x80,0x80,0xF8,0xF8,0x80,0x80,0xF0,0xF0,
 0x10,0x10,0x18,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x20,0xA0,0xA9,0x29,0xA9,0xA9,0x29,0x3F,0xBF,0xA9,0x29,0x29,0x29,
 0xA9,0xA0,0x20,0x00,0x02,0x02,0x13,0x11,0x53,0xD2,0x92,0xFE,0xFE,0x12,0xD2,0xD2,
 0x13,0x13,0x03,0x01,0x00,0x02,0x02,0x02,0x82,0xE2,0x7F,0x1F,0x02,0x02,0x02,0xFF,
 0xFF,0x02,0x02,0x02,0x02,0x00,0x00,0x00,0x81,0xC1,0x78,0x3F,0x3F,0x74,0xC4,0xC4,
 0x7C,0x3C,0x00,0x00,0x00,0x00,0x00,0x20,0x38,0x1E,0xFF,0xFF,0x8E,0xFC,0x7F,0x0F,
 0x8F,0xDD,0x71,0xFD,0x8F,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x02,0x03,0x01,0x00,0x00,0x03,0x03,0x00,0x00,0x03,0x03,0x00,0x00,
 0x00,0x03,0x03,0x00,0x02,0x02,0x02,0x02,0x02,0x03,0x03,0x03,0x03,0x03,0x03,0x02,
 0x02,0x02,0x02,0x02,0x00,0x00,0x02,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x03,
 0x03,0x00,0x00,0x00,0x00,0x00,0x02,0x03,0x01,0x04,0x04,0x06,0x02,0x03,0x01,0x01,
 0x01,0x03,0x06,0x06,0x02,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x00,0x00,0x02,0x03,
 0x01,0x00,0x00,0x01,0x03,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

typedef unsigned short us;
typedef struct{
	unsigned long int DATA;
	unsigned long int DIRECTION;
	unsigned long int INTERUPT;
	unsigned long int EDGE;

}PIO;

#define PIO_0_s ((PIO *) PIO_0_BASE )
#define PIO_0_DATA PIO_0_s->DATA
#define PIO_0_DIRECTION PIO_0_s->DIRECTION
#define PIO_0_EDGE PIO_0_s->EDGE
#define PIO_0_INTERUPT PIO_0_s->INTERUPT
#define LCD_CS ((PIO*) LCD_CS_BASE)
#define LCD_SCL ((PIO*)LCD_SCL_BASE)
#define LCD_A0 ((PIO*) LCD_A0_BASE)
#define LCD_SI ((PIO*) LCD_SI_BASE)
#define PIO_PIN_0      	0x0001  /* Pin 0 selected    */
#define PIO_PIN_1       0x0002  /* Pin 1 selected    */
#define PIO_PIN_2       0x0004  /* Pin 2 selected    */
#define PIO_PIN_3      	0x0008  /* Pin 3 selected    */
#define PIO_PIN_4       0x0010  /* Pin 4 selected    */
#define PIO_PIN_5       0x0020  /* Pin 5 selected    */
#define PIO_PIN_6       0x0040  /* Pin 6 selected    */
#define PIO_PIN_7       0x0080  /* Pin 7 selected    */
#define PIO_PIN_8       0x0100  /* Pin 8 selected    */
#define PIO_PIN_9       0x0200  /* Pin 9 selected    */
#define PIO_PIN_10     	0x0400  /* Pin 10 selected   */
#define PIO_PIN_11      0x0800  /* Pin 11 selected   */
#define PIO_PIN_12      0x1000  /* Pin 12 selected   */
#define PIO_PIN_13      0x2000  /* Pin 13 selected   */
#define PIO_PIN_14      0x4000  /* Pin 14 selected   */
#define PIO_PIN_15      0x8000  /* Pin 15 selected   */
#define PIO_PIN_All     0xFFFF  /* All pins selected*/

void initialize_lcd(void);
void draw_screen(unsigned char *p);
void clear(void);
void write_data(unsigned char dat);
void data_send(unsigned char dat);
void write_command(unsigned char com);


void initPIO(){
		PIO_0_DATA = 0x00;
		PIO_0_DIRECTION = 0xFF;
		PIO_0_EDGE = 0x00;
		PIO_0_INTERUPT=0x00;
	}

int setData_0(us index, us data){
		if(data==1){
			PIO_0_DATA |= (1<<index); //make index to 1
		}else{
			PIO_0_DATA &=~(1<<index);
		}return PIO_0_DATA;
	}

void setOne_0(us pin){
		PIO_0_DATA |=pin;
	}

void setZero_0(us pin){
		PIO_0_DATA &=~pin;
	}

us readData_0(us index){
			return (PIO_0_DATA>>index) & 1;
	}


us changeDir_0(us index, us data){
		if(data==1){
			PIO_0_DIRECTION |= (1<<index); //make index to 1
		}else{
			PIO_0_DIRECTION &=~(1<<index);
		}return PIO_0_DIRECTION;
	}


void data_send(unsigned char dat) {
unsigned char i;
	 LCD_CS->DATA=0;
	 LCD_SCL->DATA=0;
	for(i=0;i<8;i++){
		if(dat&0x80)
			LCD_SI->DATA=1;
		else
			LCD_SI->DATA=0;
		dat<<=1;
		LCD_SCL->DATA=0;
		LCD_SCL->DATA=1;
	}
	LCD_CS->DATA=1;
}
/*
* === FUNCTION ======================================== * Name: write_command
* Description: A0为低时，写命令字，
* ===================================================== */
void write_command(unsigned char com) {
	LCD_A0->DATA=0;
	data_send(com);
 }
/*
* === FUNCTION ======================================== * Name: write_data
* Description: A0为高时，写数据
* ===================================================== */
void write_data(unsigned char dat) {
    LCD_A0->DATA = 1;
    data_send(dat);
}
/*
 * === FUNCTION ======================================== * Name: set_x
* Description: 讴置列地址
* ===================================================== */
 void set_x(unsigned char x) {
write_command(x>>4|0x10);
write_command(x&0xf); }
/*
* === FUNCTION ========================================
*
* Description: 讴置页地址 一共8页
* ===================================================== */
void set_y(unsigned char y) {
write_command(y|0xb0); }
/*
* === FUNCTION ========================================
Name: set_y
*
* Description: 清屏
* =====================================================
Name: clear
 */
void clear(void) {
int seg; int page;
for(page=0;page<8;page++){
		set_y(page);//讴置页地址，一共8页 set_x(0x00);//讴置列地址为0
		for(seg=0;seg<128;seg++){
			write_data(0);
		}
	}
}
/*
* === *
* Description: 显示一张128*64癿图片
* =====================================================
FUNCTION ======================================== Name: draw_screen
 */
void draw_screen(unsigned char *p) {
int seg; int page;
for(page=0;page<8;page++){
	set_y(page);//讴置页地址，一共8页 set_x(0x00);//讴置列地址为0
			for(seg=0;seg<128;seg++){
					write_data(*p++);
			}
		}
}
/*
* === *
* Description: LCD刜始化，刜始化凼数由厂商提供，相关讴置请查询datasheet
* =====================================================
FUNCTION ======================================== Name: initialize_lcd
 */
void initialize_lcd(void) {
write_command(0xaf);
//ON DISPLAY write_command(0x40);
//STAR DISPLAY write_command(0xa0);
//ADC NORMAL write_command(0xa6);
//Display Normal write_command(0xa4);
//CLEAR
write_command(0xa2); //1/9BIAS
write_command(0xc8); //COMMON OUTPUT DIRECTION
write_command(0x2f); //POWER CONTROL
write_command(0x24); //RESISTER RATIO write_command(0x81); //VOLUM MODE SET write_command(0x24); //RESISTER RATIO
}

