/*
 * pio.h
 *
 *  Created on: 2018-12-15
 *      Author: lyh
 */

#define PIO_PIN_0                 ((uint16_t)0x0001)  /* Pin 0 selected    */
#define PIO_PIN_1                 ((uint16_t)0x0002)  /* Pin 1 selected    */
#define PIO_PIN_2                 ((uint16_t)0x0004)  /* Pin 2 selected    */
#define PIO_PIN_3                 ((uint16_t)0x0008)  /* Pin 3 selected    */
#define PIO_PIN_4                 ((uint16_t)0x0010)  /* Pin 4 selected    */
#define PIO_PIN_5                 ((uint16_t)0x0020)  /* Pin 5 selected    */
#define PIO_PIN_6                 ((uint16_t)0x0040)  /* Pin 6 selected    */
#define PIO_PIN_7                 ((uint16_t)0x0080)  /* Pin 7 selected    */
#define PIO_PIN_8                 ((uint16_t)0x0100)  /* Pin 8 selected    */
#define PIO_PIN_9                 ((uint16_t)0x0200)  /* Pin 9 selected    */
#define PIO_PIN_10                ((uint16_t)0x0400)  /* Pin 10 selected   */
#define PIO_PIN_11                ((uint16_t)0x0800)  /* Pin 11 selected   */
#define PIO_PIN_12                ((uint16_t)0x1000)  /* Pin 12 selected   */
#define PIO_PIN_13                ((uint16_t)0x2000)  /* Pin 13 selected   */
#define PIO_PIN_14                ((uint16_t)0x4000)  /* Pin 14 selected   */
#define PIO_PIN_15                ((uint16_t)0x8000)  /* Pin 15 selected   */
#define PIO_PIN_All               ((uint16_t)0xFFFF)  /* All pins selected*/

#ifndef PIO_H_
#define PIO_H_

typedef unsigned short us;
typedef struct{

	unsigned long int DATA;
	unsigned long int DIRECTION;
	unsigned long int INTERUPT;
	unsigned long int EDGE;

}PIO;

#ifdef PIO_H_
#define PIO_0_s ((PIO *) PIO_0_BASE )
#define PIO_0_DATA PIO_0_s->DATA
#define PIO_0_DIRECTION PIO_0_s->DIRECTION
#define PIO_0_EDGE PI_0_Os->EDGE
#define PIO_0_INTERUPT PIO_0_s->INTERUPT

	void initPIO(){
		PIO_0_DATA = 0;
		PIO_0_DIRECTI = 0;
		PIO_0_EDGE=0x00;
		PIO_0_INTERUPT=0x00;
	}

	us setData_0(us index, bool data){
		if(data==true){
			PIO_0_DATA |= (1<<index); //make index to 1
		}else{
			PIO_0_DATA &=~(1<<index);
		}return PIO_0_DATA;
	}


	us readData_0(){
		return PIO_0_DATA;
	}

	us changeDir_0(us index, bool data){
		if(data==true){
			PIO_0_DIRECTION |= (1<<index); //make index to 1
		}else{
			PIO_0_DIRECTION &=~(1<<index);
		}return PIO_0_DIRECTION;
	}



#endif /* PIO_H_ */
